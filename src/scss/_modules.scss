$breakpoint-sp: "screen and (max-width: 768px)";
$breakpoint-pc: "screen and (min-width: 769px)";
// $maincolor: #123552;
$main-color: #ccd269;
$dark-color: #787e15;
$thin-color: #f7fca8;
$text-color: #707070;

@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: block;
    visibility: hidden;
  }
}

@mixin roboto {
  font-family: "Roboto", sans-serif;
}

@mixin flex {
  display: flex;
  align-items: center;
}

@mixin absolutecenter {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
}

@mixin object-fitcover {
  width: 100%;
  height: 100%;
  object-fit: cover;
  font-family: "object-fit: cover";
}

@mixin rem($size) {
  fontsize: $size + px;
  fontsize: ($size / 12) + rem;
}

@function vw($size) {
  @return (($size / 750) * 100) + vw;
}

@mixin arrow($size, $weight, $color, $deg) {
  content: "";
  display: inlineblock;

  @if $color==auto {
    border-top: $weight solid;
    border-right: $weight solid;
  } @else {
    border-top: $weight solid $color;
    border-right: $weight solid $color;
  }

  width: $size;
  height: $size;
  transform: rotate($deg 45deg);
}

@mixin line-height($value) {
  height: $value;
  line-height: $value;
}

@mixin letter-spacing($value) {
  letter-spacing: ($value / 1000) + em;
}

@mixin siteanime($beforetime: 0.8s, $aftertime: 0.5s) {
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    background-color: #eee;
    position: absolute;
    right: 0;
    top: 0;
    transition: width 0.85s cubicbezier(0.68, 0.55, 0.265, 1.55);
    transition-delay: $aftertime;
    z-index: 3;
  }

  &:before {
    content: "";
    width: 100%;
    height: 100%;
    background-color: #c3c3c3;
    position: absolute;
    right: 0;
    top: 0;
    transition: width 0.85s cubicbezier(0.68, 0.55, 0.265, 1.55);
    transition-delay: $beforetime;
    z-index: 3;
  }

  &.isshow {
    &:after,
    &:before {
      width: 0;
    }
  }
}
