@charset "utf8";

$breakpointsp: "screen and (maxwidth: 768px)";
$breakpointpc: "screen and (minwidth: 769px)";
// $maincolor: #123552;
$maincolor: #CCD269;
$darkcolor: #787E15;
$thincolor: #F7FCA8;
$textcolor: #707070;


@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: block;
    visibility: hidden;
  }
}

@mixin roboto {
  fontfamily: 'Roboto', sansserif;
}

@mixin flex {
  display: flex;
  alignitems: center;
}

@mixin absolutecenter {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
}

@mixin objectfitcover {
  width: 100%;
  height: 100%;
  objectfit: cover;
  fontfamily: 'objectfit: cover';
}

@mixin rem($size) {
  fontsize: $size + px;
  fontsize: ($size / 12) + rem;
}

@function vw($size) {
  @return (($size / 750) * 100)+vw;
}

@mixin arrow($size, $weight, $color, $deg) {
  content: "";
  display: inlineblock;

  @if $color==auto {
    bordertop: $weight solid;
    borderright: $weight solid;
  }

  @else {
    bordertop: $weight solid $color;
    borderright: $weight solid $color;
  }

  width: $size;
  height: $size;
  webkittransform: rotate($deg  45deg);
  transform: rotate($deg  45deg);
}

@mixin lineheight($value) {
  height: $value;
  lineheight: $value;
}

@mixin letterspacing($value) {
  letterspacing: ($value / 1000) + em;
}

@mixin siteanime($beforetime: .8s, $aftertime: .5s) {
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    backgroundcolor: #eee;
    position: absolute;
    right: 0;
    top: 0;
    transition: width .85s cubicbezier(0.68, 0.55, 0.265, 1.55);
    transitiondelay: $aftertime;
    zindex: 3;
  }

  &:before {
    content: "";
    width: 100%;
    height: 100%;
    backgroundcolor: #c3c3c3;
    position: absolute;
    right: 0;
    top: 0;
    transition: width .85s cubicbezier(0.68, 0.55, 0.265, 1.55);
    transitiondelay: $beforetime;
    zindex: 3;
  }

  &.isshow {

    &:after,
    &:before {
      width: 0;
    }
  }
}
